{"application": "apptimize", "disabled": true, "expectedArtifacts": [], "id": "be996a52-5648-4b80-97db-dcd3a4c580dc", "index": 5, "keepWaitingPipelines": false, "lastModifiedBy": "yinmeng.zhang@airship.com", "limitConcurrent": false, "name": "Indiv. Backend Canary Deploy (hacky and disabled don't use me)", "notifications": [{"address": "test-spinnaker", "level": "pipeline", "type": "slack", "when": ["pipeline.complete", "pipeline.starting", "pipeline.failed"]}, {"address": "apptimize-deploy", "level": "pipeline", "message": {"pipeline.starting": {"text": ""}}, "type": "slack", "when": ["pipeline.starting", "pipeline.complete", "pipeline.failed"]}], "parameterConfig": [{"default": "", "description": "Image version tag", "hasOptions": false, "label": "tag", "name": "tag", "options": [{"value": ""}], "pinned": true, "required": true}, {"default": "", "description": "name of apptimize backend service [ex. \"admin\", \"agg\", \"router\"]", "hasOptions": false, "label": "service", "name": "service", "options": [{"value": ""}], "pinned": true, "required": true}, {"default": "apptimize-stag", "description": "", "hasOptions": true, "label": "project", "name": "project", "options": [{"value": "apptimize-stag"}, {"value": "apptimize-eucs"}, {"value": "apptimize-prod"}], "pinned": true, "required": true}, {"default": "regional", "description": "type of instance group: \"region\" or \"zone\"", "hasOptions": true, "label": "type", "name": "type", "options": [{"value": "regional"}, {"value": "zonal"}], "pinned": false, "required": true}, {"default": "3", "description": "", "hasOptions": false, "label": "surge", "name": "surge", "options": [{"value": ""}], "pinned": false, "required": false}, {"default": "0", "description": "", "hasOptions": false, "label": "unavailable", "name": "max unavailable", "options": [{"value": ""}], "pinned": false, "required": false}], "schema": "1", "spelEvaluator": "v4", "stages": [{"account": "gcb-account", "application": "apptimize", "buildDefinition": {"options": {"substitutionOption": "ALLOW_LOOSE"}, "steps": [{"args": ["source", "repos", "clone", "github_urbanairship_gcp-infrastructure", "./", "--project=ua-gcp-alpha-testing"], "id": "Clone gcp-infrastructure", "name": "gcr.io/cloud-builders/gcloud"}, {"args": ["/bin/ash", "-c", "echo \"GCP DEPLOY:\"\necho \"- DEPLOY: ${_NAME}${_SERVICE}-1\"\necho \"- PROJECT: ${_PROJECT}\"\necho \"CHOOCHER:\"\necho \"- VERSION: ${_CHOOCHER_VER}\"\necho \"- LOG_LEVEL: ${_CHOOCHER_LOG_LEVEL}\"\n"], "id": "info", "name": "gcr.io/ua-ops-artifacts/choocher:${_CHOOCHER_VER}"}, {"args": ["render", "--project=${_PROJECT}", "--deployment=deployments.yaml", "--env=project=${_PROJECT},deployment=${_NAME}${_SERVICE}-1", "--log-level=${_CHOOCHER_LOG_LEVEL}", "${_NAME}${_SERVICE}-1"], "id": "render", "name": "gcr.io/ua-ops-artifacts/choocher:${_CHOOCHER_VER}"}, {"args": ["-c", "pip install ruamel.yaml\npython check_tags_exist.py --deployment ${_NAME}${_SERVICE}-1\n"], "entrypoint": "bash", "id": "Check artifact exists", "name": "gcr.io/cloud-builders/gcloud"}, {"args": ["deploy", "--project=${_PROJECT}", "--deployment=deployments.yaml", "--log-level=${_CHOOCHER_LOG_LEVEL}", "${_NAME}${_SERVICE}-1"], "id": "deploy", "name": "gcr.io/ua-ops-artifacts/choocher:${_CHOOCHER_VER}"}], "substitutions": {"_CHOOCHER_LOG_LEVEL": "INFO", "_CHOOCHER_VER": "v6.0.0", "_NAME": "apptimize-backend-", "_PROJECT": "${parameters[\"project\"]}", "_SERVICE": "${parameters[\"service\"]}"}, "timeout": "1800s"}, "buildDefinitionSource": "text", "name": "Deploy service", "refId": "4", "requisiteStageRefIds": ["13"], "restrictExecutionDuringTimeWindow": false, "restrictedExecutionWindow": {"days": [7], "whitelist": [{"endHour": 7, "endMin": 0, "startHour": 6, "startMin": 0}]}, "sendNotifications": false, "type": "googleCloudBuild"}, {"account": "gcb-account", "application": "apptimize", "buildDefinition": {"steps": [{"args": ["cp", "gs://ua-ops-deploy_cloudbuild/secrets/id_rsa.enc", "id_rsa.enc"], "id": "Get Github credentials", "name": "gcr.io/cloud-builders/gsutil", "volumes": [{"name": "ssh", "path": "/root/.ssh"}]}, {"args": ["kms", "decrypt", "--ciphertext-file=id_rsa.enc", "--plaintext-file=/root/.ssh/id_rsa", "--location=global", "--keyring=cloudbuilder", "--key=github-key", "--project=ua-ops-deploy"], "id": "Decrypt credentials", "name": "gcr.io/cloud-builders/gcloud", "volumes": [{"name": "ssh", "path": "/root/.ssh"}]}, {"args": ["-c", "chmod 600 /root/.ssh/id_rsa\ncat <<EOF >/root/.ssh/config\nHostname github.com\nIdentityFile /root/.ssh/id_rsa\nEOF\nssh-keyscan -t rsa github.com > known_hosts\nmv known_hosts /root/.ssh/known_hosts\n"], "entrypoint": "bash", "id": "Configure git", "name": "gcr.io/cloud-builders/git", "volumes": [{"name": "ssh", "path": "/root/.ssh"}]}, {"args": ["-c", "git clone git@github.com:urbanairship/gcp-infrastructure\n"], "entrypoint": "bash", "name": "gcr.io/cloud-builders/git", "volumes": [{"name": "ssh", "path": "/root/.ssh"}]}, {"args": ["-c", "cd gcp-infrastructure\npython --version\npip install ruamel.yaml\npython version.py --deployment apptimize-backend-${parameters[\"service\"]}-1 --tag ${parameters[\"tag\"]}\n"], "entrypoint": "bash", "id": "Update tag", "name": "gcr.io/cloud-builders/git"}, {"args": ["-c", "cd gcp-infrastructure\ngit config --global user.name \"Spinnaker\"\ngit config --global user.email \"infra@urbanairship.com\"\ngit commit -am \"Automatic image tagging by Spinnaker\"\ngit pull\ngit push origin master\n"], "entrypoint": "bash", "id": "Push changes", "name": "gcr.io/cloud-builders/git", "volumes": [{"name": "ssh", "path": "/root/.ssh"}]}]}, "buildDefinitionSource": "text", "failOnFailedExpressions": false, "name": "Set image tag", "refId": "13", "requisiteStageRefIds": [], "restrictExecutionDuringTimeWindow": false, "restrictedExecutionWindow": {"days": [1], "whitelist": [{"endHour": 7, "endMin": 0, "startHour": 6, "startMin": 0}]}, "stageEnabled": {"expression": "parameters['tag'] != null && parameters['tag'] != ''", "type": "expression"}, "type": "googleCloudBuild"}, {"account": "gcb-account", "application": "apptimize", "buildDefinition": {"steps": [{"args": ["source", "repos", "clone", "github_urbanairship_gcp-infrastructure", "./", "--project=ua-ops-deploy"], "id": "Clone gcp-infrastructure", "name": "gcr.io/cloud-builders/gcloud"}, {"args": ["-c", "\n\nargs=\"-s ${_SURGE} -u ${_UNAVAIL}\"\necho \"$args\"\nif [[ ${_PROJECT} == 'apptimize-eucs' ]]; then\n  region=\"europe-west1\"\n  zone=\"europe-west1-b\"\nelse\n  region=${_REGION}\n  zone=${_ZONE}\nfi\necho \"$region\" echo \"$zone\"\n\nif [[ ${_TYPE} == 'regional' ]]; then\n  location=\"$region\"\n  arg=\"-r\"\nelse\n  location=\"$zone\"\n  arg=\"-z\"\n  args=\"-s 0 -u 3\"\nfi\necho \"$location\" echo \"$arg\"\nbash rolling-deploy.sh -d ${_DEPLOYMENT}${_SERVICE}-1 -p ${_PROJECT} $arg $location $args\n"], "entrypoint": "bash", "id": "Rolling Update", "name": "gcr.io/cloud-builders/git"}], "substitutions": {"_DEPLOYMENT": "apptimize-backend-", "_PROJECT": "${parameters[\"project\"]}", "_REGION": "us-east1", "_SERVICE": "${parameters[\"service\"]}", "_SURGE": "${parameters[\"surge\"]}", "_TYPE": "${parameters[\"type\"]}", "_UNAVAIL": "${parameters[\"unavailable\"]}", "_ZONE": "us-east1-b"}, "timeout": "3600s"}, "buildDefinitionSource": "text", "comments": "<ul>\n      <li><a target=\"_blank\"  href=\"https://console.cloud.google.com/compute/instanceGroups/details/us-east1/apptimize-dashboard-api-1-igm?project=apptimize-stag&amp;organizationId=272278969548\">Instance Group Dashboard</a></li>\n      <li><a target=\"_blank\"  href=\"https://console.cloud.google.com/logs/viewer?resource=gce_instance&amp;project=apptimize-stag&amp;organizationId=272278969548&amp;minLogLevel=0&amp;expandAll=false&amp;advancedFilter=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22%3A%22apptimize-dashboard-api-1-instance%22\">Instance Group Logs</a></li>\n    <li><a target=\"_blank\" href=\"https://console.cloud.google.com/logs/viewer?resource=gce_instance&project=apptimize-stag&organizationId=272278969548&minLogLevel=0&expandAll=false&advancedFilter=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22:%22apptimize-dashboard-api-1-instance%22%0AjsonPayload.CONTAINER_NAME%3D%22nginx-maintenance%22\">Container Logs</a></li></ul>", "name": "Update instances", "notifications": [], "refId": "14", "requisiteStageRefIds": ["16"], "type": "googleCloudBuild"}, {"account": "gcb-account", "application": "apptimize", "buildDefinition": {"options": {"substitutionOption": "ALLOW_LOOSE"}, "steps": [{"args": ["source", "repos", "clone", "github_urbanairship_gcp-infrastructure", "./", "--project=ua-ops-deploy"], "id": "Clone gcp-infrastructure", "name": "gcr.io/cloud-builders/gcloud"}, {"args": ["/bin/ash", "-c", "echo \"GCP DEPLOY:\"\necho \"- DEPLOY: ${_NAME}${_SERVICE}\"\necho \"- PROJECT: ${_PROJECT}\"\necho \"CHOOCHER:\"\necho \"- VERSION: ${_CHOOCHER_VER}\"\necho \"- LOG_LEVEL: ${_CHOOCHER_LOG_LEVEL}\"\n"], "id": "info", "name": "gcr.io/ua-ops-artifacts/choocher:${_CHOOCHER_VER}"}, {"args": ["/bin/ash", "-c", "if [[ ${_PROJECT} == 'apptimize-eucs' ]]; then\n  region='europe-west1'\nelse\n  region=${_REGION}\nfi\n./update_ig.py --method single --project ${_PROJECT} --region ${region} --group ${_NAME}${_SERVICE}-1-igm\n"], "id": "update-ig", "name": "gcr.io/ua-ops-artifacts/choocher:${_CHOOCHER_VER}"}], "substitutions": {"_CHOOCHER_LOG_LEVEL": "INFO", "_CHOOCHER_VER": "v6.0.0", "_NAME": "apptimize-backend-", "_PROJECT": "${parameters[\"project\"]}", "_REGION": "us-east1", "_SERVICE": "${parameters[\"service\"]}"}, "timeout": "1800s"}, "buildDefinitionSource": "text", "comments": "<ul>\n      <li><a target=\"_blank\"  href=\"https://console.cloud.google.com/compute/instanceGroups/details/us-east1/${templateVariables.deployment}-igm?project=ua-ops-transitional-prod&amp;organizationId=272278969548\">Instance Group Dashboard</a></li>\n      <li><a target=\"_blank\"  href=\"https://console.cloud.google.com/logs/viewer?resource=gce_instance&amp;project=ua-ops-transitional-prod&amp;organizationId=272278969548&amp;minLogLevel=0&amp;expandAll=false&amp;advancedFilter=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22%3A%22${templateVariables.deployment}-instance%22\">Instance Group Logs</a></li>\n      <li><a target=\"_blank\"  href=\"https://console.cloud.google.com/logs/viewer?resource=gce_instance&amp;project=ua-ops-transitional-prod&amp;organizationId=272278969548&amp;minLogLevel=0&amp;expandAll=false&amp;advancedFilter=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22%3A%22${templateVariables.deployment}-instance%22%0AjsonPayload.serviceContext.version%3A%22${parameters[\"tag\"]}%22\">Instance Group Logs (just version ${parameters[\"tag\"]})</a></li>\n    <li><a target=\"_blank\" href=\"https://console.cloud.google.com/logs/viewer?resource=gce_instance&project=ua-ops-transitional-prod&organizationId=272278969548&minLogLevel=0&expandAll=false&advancedFilter=resource.type%3D%22gce_instance%22%0Alabels.%22compute.googleapis.com%2Fresource_name%22:%22${templateVariables.deployment}-instance%22%0AjsonPayload.CONTAINER_NAME%3D%22${templateVariables.deployment.toString().replaceAll(\"-\\d\", \"\")}%22\">Container Logs</a></li>\n      <li><a target=\"_blank\" href=\"https://console.cloud.google.com/errors?service=${templateVariables.deployment.toString().replaceAll(\"-\\d\", \"\")}&time=PT6H&order=COUNT_DESC&project=ua-ops-transitional-prod\">Error Reporting</a></li></ul>", "completeOtherBranchesThenFail": true, "continuePipeline": false, "failPipeline": false, "name": "Canary- static prod", "refId": "15", "requisiteStageRefIds": ["4"], "type": "googleCloudBuild"}, {"failPipeline": true, "instructions": "Please verify that your changes are working in staging before continuing the deploy.", "judgmentInputs": [], "name": "Continue  Deploy?", "notifications": [{"address": "${ trigger['user'] }", "level": "stage", "type": "email", "when": ["manualJudgment"]}, {"address": "apptimize-deploy", "level": "stage", "type": "slack", "when": ["manualJudgmentContinue", "manualJudgmentStop", "manualJudgment"]}], "refId": "16", "requisiteStageRefIds": ["15"], "restrictExecutionDuringTimeWindow": false, "restrictedExecutionWindow": {"days": [], "jitter": {"enabled": false, "maxDelay": 600, "minDelay": 0, "skipManual": false}, "whitelist": []}, "sendNotifications": true, "type": "manualJudgment"}], "triggers": [], "updateTs": "1643394458930"}